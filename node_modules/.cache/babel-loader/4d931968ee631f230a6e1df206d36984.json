{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uch\\\\React\\\\udemy course\\\\authentication\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  isLogin: token => {},\n  isLogout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationTime = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationTime);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport function AuthContextProvider(props) {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  ;\n  const [token, setToken] = useState(initialToken);\n  const logStatus = !!token;\n  let logoutTimer;\n\n  if (logoutTimer) {\n    clearTimeout(logoutTimer);\n  }\n\n  ;\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    setToken(token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const contextValue = {\n    token,\n    isLoggedIn: logStatus,\n    isLogin: loginHandler,\n    isLogout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthContextProvider, \"8LrAviePCv3uI+ZVNXU44CSeHps=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Uch/React/udemy course/authentication/src/store/auth-context.js"],"names":["React","useCallback","useState","useEffect","AuthContext","createContext","token","isLoggedIn","isLogin","isLogout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationTime","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","logStatus","logoutTimer","clearTimeout","setTimeout","logoutHandler","loginHandler","setItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE,EADsC;AAE7CC,EAAAA,UAAU,EAAE,KAFiC;AAG7CC,EAAAA,OAAO,EAAGF,KAAD,IAAW,CAAG,CAHsB;AAI7CG,EAAAA,QAAQ,EAAE,MAAM,CAAG;AAJ0B,CAApB,CAApB;;AAOP,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AACjD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AACA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;AACA,SAAOI,iBAAP;AACD,CALD;;AAOA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAIF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA9B;AAEA,QAAME,aAAa,GAAGZ,sBAAsB,CAACW,oBAAD,CAA5C;;AAEA,MAAIC,aAAa,IAAI,KAArB,EAA4B;AAC1BH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAJ,IAAAA,YAAY,CAACI,UAAb,CAAwB,gBAAxB;AACA,WAAO,IAAP;AACD;;AAED,SAAO;AACLjB,IAAAA,KAAK,EAAEY,WADF;AAELM,IAAAA,QAAQ,EAAEF;AAFL,GAAP;AAID,CAhBD;;AAkBA,OAAO,SAASG,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAEzC,QAAMC,SAAS,GAAGV,mBAAmB,EAArC;AACA,MAAIW,YAAJ;;AACA,MAAID,SAAJ,EAAe;AACbC,IAAAA,YAAY,GAAGD,SAAS,CAACrB,KAAzB;AACD;;AAAA;AAGD,QAAM,CAACA,KAAD,EAAQuB,QAAR,IAAoB3B,QAAQ,CAAC0B,YAAD,CAAlC;AACA,QAAME,SAAS,GAAG,CAAC,CAACxB,KAApB;AACA,MAAIyB,WAAJ;;AAEA,MAAIA,WAAJ,EAAiB;AACfC,IAAAA,YAAY,CAACD,WAAD,CAAZ;AACD;;AAAA;AAEH5B,EAAAA,SAAS,CAAE,MAAM;AACf,QAAIwB,SAAJ,EAAe;AACbI,MAAAA,WAAW,GAAGE,UAAU,CAACC,aAAD,EAAgBP,SAAS,CAACH,QAA1B,CAAxB;AACD;AACF,GAJQ,EAIN,CAACG,SAAD,EAAYO,aAAZ,CAJM,CAAT;AAME,QAAMA,aAAa,GAAGjC,WAAW,CAAC,MAAM;AACtC4B,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAV,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAJ,IAAAA,YAAY,CAACI,UAAb,CAAwB,gBAAxB;AACD,GAJgC,EAI9B,EAJ8B,CAAjC;;AAMA,QAAMY,YAAY,GAAG,CAAC7B,KAAD,EAAQK,cAAR,KAA2B;AAC9CQ,IAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA8B9B,KAA9B;AACAa,IAAAA,YAAY,CAACiB,OAAb,CAAqB,gBAArB,EAAuCzB,cAAvC;AACAkB,IAAAA,QAAQ,CAACvB,KAAD,CAAR;AAEA,UAAMgB,aAAa,GAAGZ,sBAAsB,CAACC,cAAD,CAA5C;AAEAoB,IAAAA,WAAW,GAAGE,UAAU,CAACC,aAAD,EAAgBZ,aAAhB,CAAxB;AACD,GARD;;AAUA,QAAMe,YAAY,GAAG;AACnB/B,IAAAA,KADmB;AAEnBC,IAAAA,UAAU,EAAEuB,SAFO;AAGnBtB,IAAAA,OAAO,EAAE2B,YAHU;AAInB1B,IAAAA,QAAQ,EAAEyB;AAJS,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,YAA7B;AAAA,cACGX,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAnDeb,mB;;KAAAA,mB","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n  token: '',\r\n  isLoggedIn: false,\r\n  isLogin: (token) => { },\r\n  isLogout: () => { },\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n  const storedExpirationTime =  localStorage.getItem('expirationTime');\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationTime);\r\n\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    return null\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime\r\n  }\r\n}\r\n\r\nexport function AuthContextProvider(props) {\r\n\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  };\r\n\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n  const logStatus = !!token;\r\n  let logoutTimer;\r\n\r\n  if (logoutTimer) {\r\n    clearTimeout(logoutTimer);\r\n  };\r\n\r\nuseEffect (() => {\r\n  if (tokenData) {\r\n    logoutTimer = setTimeout(logoutHandler, tokenData.duration)\r\n  }\r\n}, [tokenData, logoutHandler])\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expirationTime', expirationTime);\r\n    setToken(token);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  const contextValue = {\r\n    token,\r\n    isLoggedIn: logStatus,\r\n    isLogin: loginHandler,\r\n    isLogout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}