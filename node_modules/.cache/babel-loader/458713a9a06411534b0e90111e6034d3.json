{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uch\\\\React\\\\udemy course\\\\authentication\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  isLogin: token => {},\n  isLogout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nexport function AuthContextProvider(props) {\n  _s();\n\n  const initialToken = localStorage.getItem('token') || null;\n  const [token, setToken] = useState(initialToken);\n  const logStatus = !!token;\n\n  const logoutHandler = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    ;\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    localStorage.setItem('token', token);\n    setToken(token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setTimeout(logoutHandler, 3000);\n  };\n\n  const contextValue = {\n    token,\n    isLoggedIn: logStatus,\n    isLogin: loginHandler,\n    isLogout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Uch/React/udemy course/authentication/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","isLogin","isLogout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","logStatus","logoutHandler","removeItem","loginHandler","setItem","remainingTime","setTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC3CC,EAAAA,KAAK,EAAE,EADoC;AAE3CC,EAAAA,UAAU,EAAE,KAF+B;AAG3CC,EAAAA,OAAO,EAAGF,KAAD,IAAW,CAAE,CAHqB;AAI3CG,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAJyB,CAApB,CAApB;;AAOP,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AACjD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAEH,WAA7C;AACA,SAAOI,iBAAP;AACD,CAND;;AAQA,OAAO,SAASC,mBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AAE1C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAAtD;AACE,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBnB,QAAQ,CAACgB,YAAD,CAAlC;AAEA,QAAMI,SAAS,GAAG,CAAC,CAACjB,KAApB;;AAEA,QAAMkB,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACAH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACF;AAAE,GAHF;;AAKA,QAAMI,YAAY,GAAG,CAACpB,KAAD,EAAQK,cAAR,KAA2B;AAC9CS,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BrB,KAA9B;AACAgB,IAAAA,QAAQ,CAAChB,KAAD,CAAR;AAEA,UAAMsB,aAAa,GAAGlB,sBAAsB,CAACC,cAAD,CAA5C;AAEAkB,IAAAA,UAAU,CAACL,aAAD,EAAgB,IAAhB,CAAV;AACD,GAPD;;AAWA,QAAMM,YAAY,GAAG;AACnBxB,IAAAA,KADmB;AAEnBC,IAAAA,UAAU,EAAEgB,SAFO;AAGnBf,IAAAA,OAAO,EAAEkB,YAHU;AAInBjB,IAAAA,QAAQ,EAAEe;AAJS,GAArB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACGZ,KAAK,CAACa;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlCad,mB;;KAAAA,mB","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    isLogin: (token) => {},\r\n    isLogout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingDuration = adjExpirationTime -currentTime;\r\n  return remainingDuration\r\n}\r\n\r\nexport function AuthContextProvider (props) {\r\n\r\n  const initialToken = localStorage.getItem('token') || null\r\n    const [token, setToken] = useState(initialToken);\r\n\r\n    const logStatus = !!token;\r\n\r\n    const logoutHandler = () => {\r\n      localStorage.removeItem('token')\r\n      setToken(null);\r\n    ;}\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n      localStorage.setItem('token', token)\r\n      setToken(token);\r\n\r\n      const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n      setTimeout(logoutHandler, 3000)\r\n    };\r\n\r\n\r\n\r\n    const contextValue = {\r\n      token,\r\n      isLoggedIn: logStatus,\r\n      isLogin: loginHandler,\r\n      isLogout: logoutHandler,\r\n    }\r\n    return (\r\n      <AuthContext.Provider value={contextValue}>\r\n        {props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}