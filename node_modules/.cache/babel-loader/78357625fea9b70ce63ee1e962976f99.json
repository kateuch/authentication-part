{"ast":null,"code":"const apiKey = 'AIzaSyBrEdevpKRpF13aBB3W8B6ygzm4hA6LLeA';\n\nconst signRequestBody = (email, password) => {\n  return {\n    method: 'POST',\n    body: JSON.stringify({\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n};\n\nexport const authApi = {\n  signUP(email, password) {\n    fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`, signRequestBody(email, password)).then(res => {\n      if (res.ok) {\n        return alert('ok');\n      } else {\n        return res.json().then(data => {\n          let errorMessage = `Attempt's failed!`;\n\n          if (data && data.error && data.error.message) {\n            if (data.error.message === 'EMAIL_EXISTS') {\n              errorMessage = 'Email already exists';\n            }\n          }\n\n          alert(errorMessage);\n        });\n      }\n    });\n  },\n\n  signIN(email, password) {\n    fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, signRequestBody(email, password)).then(res => {\n      if (res.ok) {\n        return alert('ok');\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Unsuccessful!';\n\n          if (data && data.error && data.error.message) {\n            if (data.error.message === 'EMAIL_EXISTS' || 'INVALID_PASSWORD') {\n              errorMessage = 'Email or password is incorrect';\n            }\n          }\n\n          alert(errorMessage);\n        });\n      }\n    });\n  }\n\n};","map":{"version":3,"sources":["C:/Users/Uch/React/udemy course/authentication/src/api/auth-api.js"],"names":["apiKey","signRequestBody","email","password","method","body","JSON","stringify","returnSecureToken","headers","authApi","signUP","fetch","then","res","ok","alert","json","data","errorMessage","error","message","signIN"],"mappings":"AAEC,MAAMA,MAAM,GAAE,yCAAd;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAQ;AACTC,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBL,MAAAA,KAAK,EAAEA,KADU;AAEjBC,MAAAA,QAAQ,EAAEA,QAFO;AAGjBK,MAAAA,iBAAiB,EAAE;AAHF,KAAf,CAFG;AAOTC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAPA,GAAR;AAUD,CAXH;;AAcD,OAAO,MAAMC,OAAO,GAAG;AAEnBC,EAAAA,MAAM,CAACT,KAAD,EAAQC,QAAR,EAAkB;AACrBS,IAAAA,KAAK,CAAE,iEAAgEZ,MAAO,EAAzE,EAA4EC,eAAe,CAACC,KAAD,EAAQC,QAAR,CAA3F,CAAL,CACCU,IADD,CACOC,GAAG,IAAI;AACV,UAAGA,GAAG,CAACC,EAAP,EAAW;AACT,eAAQC,KAAK,CAAC,IAAD,CAAb;AACD,OAFD,MAEO;AACN,eAAOF,GAAG,CAACG,IAAJ,GAAWJ,IAAX,CAAiBK,IAAI,IAAI;AAC5B,cAAIC,YAAY,GAAI,mBAApB;;AACA,cAAGD,IAAI,IAAIA,IAAI,CAACE,KAAb,IAAsBF,IAAI,CAACE,KAAL,CAAWC,OAApC,EAA6C;AACzC,gBAAIH,IAAI,CAACE,KAAL,CAAWC,OAAX,KAAuB,cAA3B,EAA2C;AAC3CF,cAAAA,YAAY,GAAG,sBAAf;AACP;AAAC;;AACFH,UAAAA,KAAK,CAACG,YAAD,CAAL;AACI,SAPG,CAAP;AAQA;AACJ,KAdD;AAeF,GAlBkB;;AAoBnBG,EAAAA,MAAM,CAACpB,KAAD,EAAQC,QAAR,EAAkB;AACpBS,IAAAA,KAAK,CAAE,6EAA4EZ,MAAO,EAArF,EAAwFC,eAAe,CAACC,KAAD,EAAQC,QAAR,CAAvG,CAAL,CACCU,IADD,CACOC,GAAG,IAAI;AACV,UAAGA,GAAG,CAACC,EAAP,EAAW;AACT,eAAQC,KAAK,CAAC,IAAD,CAAb;AACD,OAFD,MAEO;AACL,eAAOF,GAAG,CAACG,IAAJ,GAAWJ,IAAX,CAAiBK,IAAI,IAAI;AAC5B,cAAIC,YAAY,GAAG,eAAnB;;AACA,cAAGD,IAAI,IAAIA,IAAI,CAACE,KAAb,IAAsBF,IAAI,CAACE,KAAL,CAAWC,OAApC,EAA6C;AAC3C,gBAAIH,IAAI,CAACE,KAAL,CAAWC,OAAX,KAAuB,cAAvB,IAAyC,kBAA7C,EAAiE;AAC7DF,cAAAA,YAAY,GAAG,gCAAf;AACT;AAAC;;AACFH,UAAAA,KAAK,CAACG,YAAD,CAAL;AACD,SAPQ,CAAP;AAQD;AACJ,KAdD;AAeF;;AApCiB,CAAhB","sourcesContent":["\r\n\r\n const apiKey ='AIzaSyBrEdevpKRpF13aBB3W8B6ygzm4hA6LLeA';\r\n const signRequestBody = (email, password) => {\r\n     return ({\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        returnSecureToken: true\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n })}\r\n\r\n\r\nexport const authApi = {\r\n\r\n    signUP(email, password) {\r\n       fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`, signRequestBody(email, password))\r\n       .then( res => {\r\n           if(res.ok) {\r\n             return  alert('ok')\r\n           } else {\r\n            return res.json().then( data => {\r\n                let errorMessage = `Attempt's failed!`\r\n                if(data && data.error && data.error.message) {\r\n                    if (data.error.message === 'EMAIL_EXISTS') {\r\n                    errorMessage = 'Email already exists'\r\n            }}\r\n            alert(errorMessage);\r\n               });\r\n           }\r\n       })\r\n    },\r\n\r\n    signIN(email, password) {\r\n        fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, signRequestBody(email, password))\r\n        .then( res => {\r\n            if(res.ok) {\r\n              return  alert('ok')\r\n            } else {\r\n              return res.json().then( data => {\r\n                  let errorMessage = 'Unsuccessful!'\r\n                  if(data && data.error && data.error.message) {\r\n                    if (data.error.message === 'EMAIL_EXISTS' || 'INVALID_PASSWORD') {\r\n                        errorMessage = 'Email or password is incorrect'\r\n              }}\r\n              alert(errorMessage);\r\n            });\r\n            }\r\n        });\r\n     }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}