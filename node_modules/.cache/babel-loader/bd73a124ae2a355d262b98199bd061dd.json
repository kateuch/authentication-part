{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uch\\\\React\\\\udemy course\\\\authentication\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  isLogin: token => {},\n  isLogout: () => {}\n});\nexport function AuthContextProvider(props) {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const logStatus = !!token;\n\n  const loginHandler = token => {\n    setToken(token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n  };\n\n  const contextValue = {\n    token,\n    isLoggedIn: logStatus,\n    isLogin: loginHandler,\n    isLogout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Uch/React/udemy course/authentication/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","isLogin","isLogout","AuthContextProvider","props","setToken","logStatus","loginHandler","logoutHandler","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC3CC,EAAAA,KAAK,EAAE,EADoC;AAE3CC,EAAAA,UAAU,EAAE,KAF+B;AAG3CC,EAAAA,OAAO,EAAGF,KAAD,IAAW,CAAE,CAHqB;AAI3CG,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAJyB,CAApB,CAApB;AAOP,OAAO,SAASC,mBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AACxC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMU,SAAS,GAAG,CAAC,CAACP,KAApB;;AAEA,QAAMQ,YAAY,GAAIR,KAAD,IAAW;AAC9BM,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMS,aAAa,GAAG,MAAM;AAC1BH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAKA,QAAMI,YAAY,GAAG;AACnBV,IAAAA,KADmB;AAEnBC,IAAAA,UAAU,EAAEM,SAFO;AAGnBL,IAAAA,OAAO,EAAEM,YAHU;AAInBL,IAAAA,QAAQ,EAAEM;AAJS,GAArB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cACGL,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBaP,mB;;KAAAA,mB","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    isLogin: (token) => {},\r\n    isLogout: () => {},\r\n});\r\n\r\nexport function AuthContextProvider (props) {\r\n    const [token, setToken] = useState(null);\r\n\r\n    const logStatus = !!token;\r\n\r\n    const loginHandler = (token) => {\r\n      setToken(token);\r\n    };\r\n    const logoutHandler = () => {\r\n      setToken(null);\r\n    }\r\n\r\n\r\n    const contextValue = {\r\n      token,\r\n      isLoggedIn: logStatus,\r\n      isLogin: loginHandler,\r\n      isLogout: logoutHandler,\r\n    }\r\n    return (\r\n      <AuthContext.Provider value={contextValue}>\r\n        {props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}